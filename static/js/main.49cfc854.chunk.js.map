{"version":3,"sources":["components/Sider/SiderItem.js","components/Sider/index.js","components/AssessmentView/index.js","pages/Lesson/index.js","components/ContentView/index.js","components/QuizView/index.js","components/LessonProgress/index.js","actions/index.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["SiderItem","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","className","Sider","Item","AssessmentView","PrevLessonButton","goToPreviousLesson","prevLessonExists","disabled","onClick","DoneButton","_ref2","NextLessonButton","_ref3","goToNextLesson","nextLessonExists","typeViewMap","content","title","Fragment","quiz","assessment","Lesson","_ref4","activeLesson","onLessonCompletion","View","type","Lesson_PrevLessonButton","Lesson_DoneButton","id","Lesson_NextLessonButton","styles","progressContainer","display","alignItems","justifyContent","progressTitle","minWidth","progressBar","height","width","LessonProgress","_ref$completedLessons","completedLessons","_ref$totalLessons","totalLessons","style","value","max","lessonCompleted","activeLessonChanged","activeLessonId","connect","lessonList","length","dispatch","objectSpread","bindActionCreators","components_Sider","fontSize","components_LessonProgress","reduce","acc","i","completed","map","lesson","key","color","undefined","pages_Lesson","find","o","findIndex","Boolean","window","location","hostname","match","initialState","reducer","state","arguments","action","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49cfc854.chunk.js","sourcesContent":["import React from 'react'\n\nfunction SiderItem ({ children, ...rest }) {\n    return (\n        <div className=\"sidenav-item\" {...rest}>\n            { children }\n        </div>\n    )\n}\n\nexport default SiderItem\n","import React from 'react'\nimport SiderItem from './SiderItem'\n\nfunction Sider ({ children }) {\n    return (\n        <div className=\"sidenav\">\n            { children }\n        </div>\n    );\n}\n\nSider.Item =  SiderItem\n\nexport default Sider\n","import React from 'react'\n\nfunction AssessmentView({ title, content }) {\n    return (\n        <>\n            <h1>{ title }</h1>\n            { content }\n        </>\n    )\n}\n\nexport default AssessmentView","import React from 'react'\nimport PropTypes from 'prop-types'\nimport QuizView from '../../components/QuizView'\nimport ContentView from '../../components/ContentView'\nimport AssessmentView from '../../components/AssessmentView'\n\nconst PrevLessonButton = ({ goToPreviousLesson, prevLessonExists }) => (\n    <button\n        disabled={!prevLessonExists}\n        onClick={goToPreviousLesson}\n    >\n        Prev Lesson\n    </button>\n)\n\nPrevLessonButton.propTypes = {\n    goToPreviousLesson: PropTypes.func.isRequired,\n    prevLessonExists: PropTypes.bool.isRequired,\n}\n\nconst DoneButton = ({ onClick }) => (\n    <button onClick={onClick}>\n        Done\n    </button>\n)\n\nDoneButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n}\n\nconst NextLessonButton = ({ goToNextLesson, nextLessonExists }) => (\n    <button\n        disabled={!nextLessonExists}\n        onClick={goToNextLesson}\n    >\n        Next Lesson\n    </button>\n)\n\nNextLessonButton.propTypes = {\n    goToNextLesson: PropTypes.func.isRequired,\n    nextLessonExists: PropTypes.bool.isRequired,\n}\n\nconst typeViewMap = {\n    content: ContentView,\n    quiz: QuizView,\n    assessment: AssessmentView,\n}\n\nfunction Lesson ({\n     activeLesson,\n     onLessonCompletion,\n     goToPreviousLesson,\n     prevLessonExists,\n     goToNextLesson,\n     nextLessonExists\n}) {\n    const View = typeViewMap[activeLesson.type]\n\n    return (\n        <div className=\"main\">\n            <View {...activeLesson} />\n\n            <div>\n                <PrevLessonButton goToPreviousLesson={goToPreviousLesson} prevLessonExists={prevLessonExists} />\n                <DoneButton onClick={() => onLessonCompletion(activeLesson.id)} />\n                <NextLessonButton goToNextLesson={goToNextLesson} nextLessonExists={nextLessonExists} />\n            </div>\n        </div>\n    )\n}\n\nLesson.propTypes = {\n    activeLesson: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        completed: PropTypes.bool.isRequired,\n        type: PropTypes.oneOf(['content', 'quiz', 'assessment'])\n    }).isRequired,\n    onLessonCompletion: PropTypes.func.isRequired,\n    goToPreviousLesson: PropTypes.func.isRequired,\n    prevLessonExists: PropTypes.bool.isRequired,\n    goToNextLesson: PropTypes.func.isRequired,\n    nextLessonExists: PropTypes.bool.isRequired,\n}\n\nexport default Lesson","import React from 'react'\n\nfunction ContentView({ title, content }) {\n    return (\n        <>\n            <h1>{ title }</h1>\n            { content }\n        </>\n    )\n}\n\nexport default ContentView","import React from 'react'\n\nfunction QuizView({ title, content }) {\n    return (\n        <>\n            <h1>{ title }</h1>\n            { content }\n        </>\n    )\n}\n\nexport default QuizView","import React from 'react'\n\nconst styles = {\n    progressContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    progressTitle: {\n        display: 'block',\n        minWidth: 90,\n    },\n    progressBar: {\n        height: 16,\n        width: '100%',\n    }\n}\n\nfunction LessonProgress ({ completedLessons = 0, totalLessons = 100 }) {\n    return (\n        <div style={ styles.progressContainer }>\n            <span style={ styles.progressTitle }>Your progress:</span>\n            <progress value={completedLessons} max={totalLessons} style={styles.progressBar} />\n        </div>\n    )\n}\n\nexport default LessonProgress","export const LESSON_COMPLETED = 'LESSON_COMPLETED';\nexport const lessonCompleted = id => ({\n    type: LESSON_COMPLETED,\n    id,\n})\n\nexport const ACTIVE_LESSON_CHANGED = 'ACTIVE_LESSON_CHANGED'\nexport const activeLessonChanged = activeLessonId => ({\n    type: ACTIVE_LESSON_CHANGED,\n    activeLessonId,\n})","import './App.css'\nimport Sider from './components/Sider'\nimport React  from 'react'\nimport LessonPage from './pages/Lesson'\nimport LessonProgress from './components/LessonProgress'\nimport { connect } from 'react-redux'\nimport {\n    lessonCompleted,\n    activeLessonChanged\n} from './actions'\nimport { bindActionCreators } from 'redux'\n\nfunction App({\n    lessonList,\n    activeLessonId,\n    prevLessonExists,\n    nextLessonExists,\n    lessonCompleted,\n    activeLessonChanged\n}) {\n    /*\n    const onLessonCompletion = id => setLessonList(\n        lessonList.map(i => ({ ...i, completed: id === i.id || i.completed }))\n    )\n    const goToNextLesson = () => setActiveLessonId(\n        lessonList[lessonList.findIndex(o => o.id === activeLessonId)+1].id\n    )\n    const goToPreviousLesson = () => setActiveLessonId(\n        lessonList[lessonList.findIndex(o => o.id === activeLessonId)-1].id\n    )\n    */\n\n    const setActiveLessonId = id => activeLessonChanged(id)\n    const goToPreviousLesson = () => activeLessonChanged(\n        lessonList[lessonList.findIndex(o => o.id === activeLessonId)-1].id\n    )\n    const goToNextLesson = () => activeLessonChanged(\n        lessonList[lessonList.findIndex(o => o.id === activeLessonId)+1].id\n    )\n    const onLessonCompletion = id => lessonCompleted(id)\n\n    return (\n        <div className=\"App\">\n            <Sider>\n                <Sider.Item style={{ fontSize: 12 }}>\n                    <LessonProgress\n                        completedLessons={lessonList.reduce((acc, i) => acc + (i.completed ? 1 : 0), 0)}\n                        totalLessons={lessonList.length}\n                    />\n                </Sider.Item>\n\n                { lessonList.map(lesson => (\n                    <Sider.Item\n                        key={lesson.id}\n                        onClick={() => setActiveLessonId(lesson.id)}\n                    >\n                        <span style={{\n                            color: lesson.id === activeLessonId ? 'white' : undefined\n                        }}>\n                            { lesson.title }\n                        </span> { lesson.completed && <span>(Done)</span>}\n                    </Sider.Item>\n                ))}\n            </Sider>\n\n            <LessonPage\n                activeLesson={lessonList.find(o => o.id === activeLessonId)}\n                prevLessonExists={prevLessonExists}\n                nextLessonExists={nextLessonExists}\n                goToPreviousLesson={goToPreviousLesson}\n                onLessonCompletion={onLessonCompletion}\n                goToNextLesson={goToNextLesson}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ lessonList, activeLessonId }) => ({\n    lessonList,\n    activeLessonId,\n    prevLessonExists: lessonList[0].id !== activeLessonId,\n    nextLessonExists: lessonList[lessonList.length-1].id !== activeLessonId,\n})\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatch,\n        ...bindActionCreators({ lessonCompleted, activeLessonChanged }, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport {\n    LESSON_COMPLETED,\n    ACTIVE_LESSON_CHANGED\n} from '../actions'\n\nconst initialState = {\n    activeLessonId: 1,\n    lessonList: [{\n        id: 1,\n        title: 'Lesson 1',\n        completed: true,\n        type: 'content',\n        content: (\n            <>\n                <p>React rocks!</p>\n            </>\n        )\n    }, {\n        id: 2,\n        title: 'Quiz 1',\n        completed: false,\n        type: 'quiz',\n        content: (\n            <>\n                <p>What rocks?</p>\n                <ul>\n                    <li>React</li>\n                    <li>Angular</li>\n                    <li>Ember</li>\n                    <li>Vue</li>\n                </ul>\n            </>\n        )\n    }, {\n        id: 3,\n        title: 'Assessment 1',\n        completed: false,\n        type: 'assessment',\n        content: (\n            <>\n                <p>Find a library that rocks.</p>\n                <em>Deadline: One week</em>\n            </>\n        )\n    }]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LESSON_COMPLETED:\n            return {\n                ...state,\n                lessonList: state.lessonList.map(i => ({ ...i, completed: action.id === i.id || i.completed }))\n            };\n        case ACTIVE_LESSON_CHANGED:\n            return {\n                ...state,\n                activeLessonId: action.activeLessonId,\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}